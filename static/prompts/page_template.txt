You are an AI assistant tasked with creating an HTML template for a specific page in a web application.

Page Information:
Name: {page_name}
Purpose: {page_purpose}

App-wide CSS (for reference):
{app_css}

Your task is to create an HTML template that:
1. Uses semantic HTML5 elements
2. Leverages the existing CSS classes from the app-wide stylesheet
3. Follows accessibility best practices
4. Includes proper data attributes for JavaScript interactions
5. Uses Django template syntax for dynamic content

Output ONLY the HTML template code with no additional text or formatting.

The template should:
- Extend the base template
- Include proper block tags
- Use meaningful IDs and classes
- Include ARIA attributes where needed
- Use data-controller and data-action attributes for Stimulus.js

Guidelines:
1. Use semantic HTML5 elements appropriately
2. Ensure proper ARIA attributes for accessibility
3. Follow BEM naming convention for classes
4. Create a responsive layout using Bootstrap 5 grid system
5. Include proper heading hierarchy
6. Add appropriate data attributes for JavaScript hooks:
   - Use data-page="{page_name}" on the root container
   - Use data-action="action-name" for interactive elements
   - Use data-target="target-name" for elements targeted by JS
   - Use data-value="value" for configuration values
7. Use template variables with Django template syntax {{ variable }}
8. Include proper form validation attributes where needed

Requirements:
- Must be valid HTML5
- Must use Bootstrap 5 classes
- Must be responsive
- Must be accessible
- Must use BEM methodology for custom classes
- Must include proper ARIA labels and roles
- Must use Django template syntax for dynamic content
- Must include proper data attributes for JavaScript interaction
- Must follow a consistent naming convention for data attributes:
  - data-page: Page identifier
  - data-action: User actions (click, submit, etc.)
  - data-target: Elements targeted by JavaScript
  - data-value: Configuration values
  - data-state: Current state of components

Example Structure:
```html
<div class="page" data-page="{page_name}">
    <header class="page__header">
        <h1 class="page__title">{{ page_title }}</h1>
    </header>
    
    <main class="page__content">
        <section class="page__section" data-target="content">
            <!-- Content here -->
        </section>
        
        <button class="page__action" 
                data-action="save"
                aria-label="Save changes">
            Save
        </button>
    </main>
</div>
```

Do not include:
- Inline styles
- Inline JavaScript
- Hard-coded content
- Implementation-specific logic
- Framework-specific attributes

Respond with the HTML template only. Do not include any explanations or additional content. 